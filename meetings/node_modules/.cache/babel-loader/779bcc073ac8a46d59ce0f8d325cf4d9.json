{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hyeon/swpp-assign2/assign2/assign2/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getAllMeetingsSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addMeetingSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteMeetingSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateMeetingSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loginSaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, put, takeLatest, select, takeEvery } from 'redux-saga/effects';\nimport actions from './actions';\nimport * as constants from './constants';\n\nfunction getAllMeetingsSaga() {\n  var meetingsData, response;\n  return _regeneratorRuntime.wrap(function getAllMeetingsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fetch, 'http://127.0.0.1:8000/meetings/', {\n            mode: \"no-cors\"\n          });\n\n        case 3:\n          response = _context.sent;\n          meetingsData = response.json();\n          console.log(meetingsData);\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          alert('fetch failed fucking!!!!!!' + _context.t0);\n          console.log(meetingsData);\n          return _context.abrupt(\"return\");\n\n        case 13:\n          _context.next = 15;\n          return put(actions.refreshMeetings(meetingsData));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction addMeetingSaga(action) {\n  var state, option, response;\n  return _regeneratorRuntime.wrap(function addMeetingSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return select();\n\n        case 2:\n          state = _context2.sent;\n          option = {\n            method: 'POST',\n            withCredentials: true,\n            credentials: 'include',\n            headers: new Headers({\n              'Authorization': \"Token \".concat(state.auth.token),\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            })\n          };\n          option.body = JSON.stringify(action.meeting);\n          _context2.prev = 5;\n          _context2.next = 8;\n          return call(fetch, 'http://127.0.0.1:8000/meetings/', option);\n\n        case 8:\n          response = _context2.sent;\n\n          if (response.ok) {\n            _context2.next = 12;\n            break;\n          }\n\n          alert('post failed! there is reservation');\n          return _context2.abrupt(\"return\");\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](5);\n          alert('post failed ' + _context2.t0);\n          return _context2.abrupt(\"return\");\n\n        case 18:\n          _context2.next = 20;\n          return call(getAllMeetingsSaga);\n\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[5, 14]]);\n}\n\nfunction deleteMeetingSaga(action) {\n  var state, option, response;\n  return _regeneratorRuntime.wrap(function deleteMeetingSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return select();\n\n        case 2:\n          state = _context3.sent;\n          option = {\n            method: 'DELETE',\n            withCredentials: true,\n            credentials: 'include',\n            headers: new Headers({\n              'Authorization': \"Token \".concat(state.auth.token),\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            })\n          };\n          _context3.prev = 4;\n          _context3.next = 7;\n          return call(fetch, \"http://127.0.0.1:8000/meetings/\".concat(action.id), option);\n\n        case 7:\n          response = _context3.sent;\n\n          if (response.ok) {\n            _context3.next = 11;\n            break;\n          }\n\n          alert('delete failed! it is not your reservation');\n          return _context3.abrupt(\"return\");\n\n        case 11:\n          _context3.next = 17;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](4);\n          alert('delete failed ' + _context3.t0);\n          return _context3.abrupt(\"return\");\n\n        case 17:\n          _context3.next = 19;\n          return call(getAllMeetingsSaga);\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[4, 13]]);\n}\n\nfunction updateMeetingSaga(action) {\n  var state, option, response;\n  return _regeneratorRuntime.wrap(function updateMeetingSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return select();\n\n        case 2:\n          state = _context4.sent;\n          option = {\n            method: 'PUT',\n            withCredentials: true,\n            credentials: 'include',\n            headers: new Headers({\n              'Authorization': \"Token \".concat(state.auth.token),\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            })\n          };\n          option.body = JSON.stringify(action.meeting);\n          _context4.prev = 5;\n          _context4.next = 8;\n          return call(fetch, \"http://127.0.0.1:8000/meetings/\".concat(action.meeting.id), option);\n\n        case 8:\n          response = _context4.sent;\n\n          if (response.ok) {\n            _context4.next = 12;\n            break;\n          }\n\n          alert('update failed! it is not your reservation');\n          return _context4.abrupt(\"return\");\n\n        case 12:\n          _context4.next = 18;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](5);\n          alert('update failed ' + _context4.t0);\n          return _context4.abrupt(\"return\");\n\n        case 18:\n          _context4.next = 20;\n          return call(getAllMeetingsSaga);\n\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[5, 14]]);\n}\n\nfunction loginSaga(action) {\n  var userInfo, option, response;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          option = {\n            method: 'POST',\n            headers: new Headers({\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            })\n          };\n          option.body = JSON.stringify(action.user);\n          _context5.prev = 2;\n          _context5.next = 5;\n          return call(fetch, 'http://127.0.0.1:8000/api-token-auth/', option);\n\n        case 5:\n          response = _context5.sent;\n          userInfo = response.json();\n\n          if (response.ok) {\n            _context5.next = 10;\n            break;\n          }\n\n          alert('login failed! there is reservation');\n          return _context5.abrupt(\"return\");\n\n        case 10:\n          _context5.next = 16;\n          break;\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](2);\n          alert('login failed ' + _context5.t0);\n          return _context5.abrupt(\"return\");\n\n        case 16:\n          userInfo.username = action.user.username;\n          _context5.next = 19;\n          return put(actions.loginSuccess(userInfo));\n\n        case 19:\n          _context5.next = 21;\n          return call(getAllMeetingsSaga);\n\n        case 21:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 12]]);\n}\n\nexport default function rootSaga(api) {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([takeLatest(constants.GET_ALL, getAllMeetingsSaga), takeEvery(constants.ADD, addMeetingSaga), takeEvery(constants.DELETE, deleteMeetingSaga), takeEvery(constants.UPDATE, updateMeetingSaga), takeLatest(constants.LOGIN, loginSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["/Users/hyeon/swpp-assign2/assign2/assign2/src/store/sagas.js"],"names":["getAllMeetingsSaga","addMeetingSaga","deleteMeetingSaga","updateMeetingSaga","loginSaga","rootSaga","all","call","put","takeLatest","select","takeEvery","actions","constants","fetch","mode","response","meetingsData","json","console","log","alert","refreshMeetings","action","state","option","method","withCredentials","credentials","headers","Headers","auth","token","body","JSON","stringify","meeting","ok","id","user","userInfo","username","loginSuccess","api","GET_ALL","ADD","DELETE","UPDATE","LOGIN"],"mappings":"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","sourcesContent":["import {\n    all,\n    call,\n    put,\n    takeLatest,\n    select,\n    takeEvery,\n} from 'redux-saga/effects';\nimport actions from './actions';\nimport * as constants from './constants';\n\nfunction* getAllMeetingsSaga() {\n    let meetingsData;\n    try {\n        const response = yield call(fetch, 'http://127.0.0.1:8000/meetings/',{mode: \"no-cors\"});\n        meetingsData = response.json();\n        console.log(meetingsData);\n    } catch (e) {\n        alert('fetch failed fucking!!!!!!' + e);\n        console.log(meetingsData);\n        return;\n    }\n    yield put(actions.refreshMeetings(meetingsData));\n}\n\nfunction* addMeetingSaga(action) {\n    const state = yield select();\n    const option = {\n        method: 'POST',\n        withCredentials: true,\n        credentials: 'include',\n        headers: new Headers({\n            'Authorization': `Token ${state.auth.token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        }),\n    };\n    option.body = JSON.stringify(action.meeting);\n    try {\n        const response = yield call(fetch, 'http://127.0.0.1:8000/meetings/', option);\n        if (!response.ok) {\n            alert('post failed! there is reservation');\n            return;\n        }\n    } catch (e) {\n        alert('post failed ' + e);\n        return;\n    }\n    yield call(getAllMeetingsSaga);\n}\n\nfunction* deleteMeetingSaga(action) {\n    const state = yield select();\n    const option = {\n        method: 'DELETE',\n        withCredentials: true,\n        credentials: 'include',\n        headers: new Headers({\n            'Authorization': `Token ${state.auth.token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        }),\n    };\n    try {\n        const response = yield call(fetch, `http://127.0.0.1:8000/meetings/${action.id}`, option);\n        if (!response.ok) {\n            alert('delete failed! it is not your reservation');\n            return;\n        }\n    } catch (e) {\n        alert('delete failed ' + e);\n        return;\n    }\n    yield call(getAllMeetingsSaga);\n}\n\nfunction* updateMeetingSaga(action) {\n    const state = yield select();\n    const option = {\n        method: 'PUT',\n        withCredentials: true,\n        credentials: 'include',\n        headers: new Headers({\n            'Authorization': `Token ${state.auth.token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        }),\n    };\n    option.body = JSON.stringify(action.meeting);\n    try {\n        const response = yield call(fetch, `http://127.0.0.1:8000/meetings/${action.meeting.id}`, option);\n        if (!response.ok) {\n            alert('update failed! it is not your reservation');\n            return;\n        }\n    } catch (e) {\n        alert('update failed ' + e);\n        return;\n    }\n    yield call(getAllMeetingsSaga);\n}\n\nfunction* loginSaga(action) {\n    let userInfo;\n    const option = {\n        method: 'POST',\n        headers: new Headers({\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        }),\n    };\n    option.body = JSON.stringify(action.user);\n    try {\n        const response = yield call(fetch, 'http://127.0.0.1:8000/api-token-auth/', option);\n        userInfo = response.json();\n        if (!response.ok) {\n            alert('login failed! there is reservation');\n            return;\n        }\n    } catch (e) {\n        alert('login failed ' + e);\n        return;\n    }\n    userInfo.username = action.user.username;\n    yield put(actions.loginSuccess(userInfo));\n    yield call(getAllMeetingsSaga);\n}\n\nexport default function* rootSaga(api) {\n    yield all([\n        takeLatest(constants.GET_ALL, getAllMeetingsSaga),\n        takeEvery(constants.ADD, addMeetingSaga),\n        takeEvery(constants.DELETE, deleteMeetingSaga),\n        takeEvery(constants.UPDATE, updateMeetingSaga),\n        takeLatest(constants.LOGIN, loginSaga),\n    ]);\n}\n"]},"metadata":{},"sourceType":"module"}